name: CMake Build

on:
  push:
    paths-ignore:
      [
        "**/**.md"
      ]

  pull_request:
    branches:
      - master
    paths-ignore:
      [
        "**/**.md"
      ]

  workflow_dispatch:

defaults:
  run:
    shell: bash

# See https://docs.github.com/en/rest/reference/permissions-required-for-github-apps
# for information on what these individual permissions represent/control
permissions:
  actions: none
  checks: none
  contents: read
  deployments: none
  issues: none
  packages: read
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: read

jobs:
  build_linux:
    name: Build Linux
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Debian
            arch: amd64
            vcpkg_triplet: x64-linux
            docker_image: debian:bullseye
    container:
      image: ${{matrix.config.docker_image}}

    env:

      # CMake settings
      CMAKE_BUILD_TYPE: Release
      CMAKE_GENERATOR: ${{matrix.config.CMAKE_GENERATOR}}
      CMAKE_GENERATOR_PLATFORM: ${{matrix.config.CMAKE_GENERATOR_PLATFORM}}

      # vcpkg settings
      VCPKG_DISABLE_METRICS: true
      VCPKG_DEFAULT_TRIPLET: ${{ matrix.config.vcpkg_triplet }}

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v2

      - name: Setup environment
        run: |
          echo EXE_SUFFIX= >> ${GITHUB_ENV}


      - name: "Install dependencies"
        run: |
          apt update && apt install -y build-essential git cmake pkg-config curl zip unzip tar ccache libavcodec-dev libavformat-dev libavutil-dev libswresample-dev libebur128-dev libinih-dev

      - uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 2de7f388c5aac1f7d63c5986fe9b1b60e7d6bbb5 }

      - name: Configure
        run: cmake -B build -D "CMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=${{matrix.config.vcpkg_triplet}} -DCMAKE_MAKE_PROGRAM=/usr/bin/make

      - name: Build
        run: cmake --build build --config ${{ env.CMAKE_BUILD_TYPE }}

      - name: Package
        run: |
          cmake --build build --target package --config ${{ env.CMAKE_BUILD_TYPE }}

      - uses: actions/upload-artifact@v3
        if: always()
        with:
          name: log
          #path: build/*.deb
          path: /__w/rsgain/rsgain/build/vcpkg-manifest-install.log
