name: Build

on:
  push:
    paths-ignore:
      - "**/**.md"

  pull_request:
    branches:
      - master
    paths-ignore:
      - "**/**.md"

  workflow_dispatch:

defaults:
  run:
    shell: bash

permissions:
  actions: none
  checks: none
  contents: write
  deployments: none
  issues: none
  packages: read
  pull-requests: none
  repository-projects: none
  security-events: none
  statuses: read

jobs:
  build_windows:
    name: Windows
    runs-on: windows-2022
    strategy:
      fail-fast: false

    env:
      CMAKE_BUILD_TYPE: Release
      CMAKE_GENERATOR: Visual Studio 17 2022
      VCPKG_TRIPLET: custom-triplet

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3
        with:
          submodules: true

      - name: Setup vcpkg
        uses: friendlyanon/setup-vcpkg@v1
        with: { committish: 94ce0dab56f4d8ba6bd631ba59ed682b02d45c46 }

      - name: Configure
        run: cmake -B build -G "${{env.CMAKE_GENERATOR}}" -D "CMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" -DVCPKG_OVERLAY_TRIPLETS=config/vcpkg_triplets -DVCPKG_TARGET_TRIPLET=${{env.VCPKG_TRIPLET}} -DVCPKG_CMAKE_SYSTEM_NAME=${{matrix.config.name}}

      - name: Build
        run: cmake --build build --target package --config ${{ env.CMAKE_BUILD_TYPE }}

      - name: Upload Package
        uses: actions/upload-artifact@v3
        with:
          name: Windows build
          path: build/*.zip

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/*.zip

  build_linux:
    name: Linux
    runs-on: ubuntu-latest
    permissions:
      packages: write
    strategy:
      fail-fast: false
      matrix:
        config:
          - name: Debian
            docker_image: debian:bullseye
            package_type: DEB
            package_ext: .deb

          - name: Fedora
            docker_image: fedora:36
            package_type: RPM
            package_ext: .rpm

    container:
      image: ${{matrix.config.docker_image}}

    env:
      CMAKE_BUILD_TYPE: Release
      VCPKG_COMMITISH: 94ce0dab56f4d8ba6bd631ba59ed682b02d45c46
      VCPKG_TRIPLET: x64-linux

    steps:
      - name: Checkout Git repository
        uses: actions/checkout@v3

      - name: "Install dependencies"
        run: |
          if [[ "${{matrix.config.name}}" == "Debian" ]]; then
            apt update && apt install -y curl zip unzip tar build-essential git cmake pkg-config libavcodec-dev libavformat-dev libavutil-dev libswresample-dev libebur128-dev libinih-dev
          fi
          if [[ "${{matrix.config.name}}" == "Fedora" ]]; then
            dnf install -y curl zip unzip tar git make pkg-config gcc-c++ fedora-packager rpmdevtools cmake libavcodec-free-devel libavformat-free-devel libswresample-free-devel libavutil-free-devel libebur128-devel taglib-devel inih-devel
          fi

      - name: Setup vcpkg
        uses: friendlyanon/setup-vcpkg@v1
        with:
          committish: ${{env.VCPKG_COMMITISH}}
          cache-key: vcpkg-${{matrix.config.name}}-${{env.VCPKG_COMMITISH}}
          cache-restore-keys: vcpkg-${{matrix.config.name}}-${{env.VCPKG_COMMITISH}}

      - name: Configure
        run: cmake -B build -D "CMAKE_TOOLCHAIN_FILE=$VCPKG_ROOT/scripts/buildsystems/vcpkg.cmake" -DVCPKG_TARGET_TRIPLET=${{env.VCPKG_TRIPLET}} -DCMAKE_BUILD_TYPE=${{env.CMAKE_BUILD_TYPE}} -DCMAKE_INSTALL_PREFIX=/usr -DPACKAGE=${{matrix.config.package_type}}

      - name: Build
        run: cmake --build build --target package --config ${{env.CMAKE_BUILD_TYPE}}

      - name: Upload Package
        uses: actions/upload-artifact@v3
        with:
          name: ${{matrix.config.name}} build
          path: build/*${{matrix.config.package_ext}}

      - name: Release
        uses: softprops/action-gh-release@v1
        if: startsWith(github.ref, 'refs/tags/')
        with:
          files: build/*${{matrix.config.package_ext}}
          token: ${{secrets.ACTIONS_SECRET}}
